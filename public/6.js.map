{"version":3,"sources":["webpack:///./entrypoints/main/src/js/components/pages/Main.jsx","webpack:///./entrypoints/main/src/js/helpers/timeHelper.js","webpack:///./entrypoints/main/src/js/components/Popup/LoadingPopup.jsx","webpack:///./entrypoints/main/src/js/components/Popup/AsyncPopup.jsx","webpack:///./entrypoints/main/src/js/components/ContactForm/AsyncCFormPopup.jsx","webpack:///./entrypoints/main/src/js/helpers/sortHelper.js","webpack:///./entrypoints/main/src/js/components/MainNav/containers/MainNavContainer.jsx","webpack:///./entrypoints/main/src/js/components/MainContent/containers/MainContentContainer.jsx","webpack:///./entrypoints/main/src/js/components/MainContent/MainContent.jsx","webpack:///./entrypoints/main/src/js/components/ContactsList/AsyncContactsList.jsx","webpack:///./entrypoints/main/src/js/components/SubNav/SubNav.jsx","webpack:///./entrypoints/main/src/js/components/ContactsList/ContactsFilter.jsx","webpack:///./entrypoints/main/src/js/components/SubNav/SubNavDropdown.jsx","webpack:///./entrypoints/main/src/js/components/MainNav/NavBtn.jsx","webpack:///./entrypoints/main/src/js/components/CbookSwitcher/AsyncCbookSwitcherModal.jsx","webpack:///./entrypoints/main/src/js/components/MainNav/MainNav.jsx"],"names":["memo","adbk","doTaskAfterDataLoaded","redux","history","location","pathname","cbookId","getDefaultCbookId","url","switchCbook","newDateObj","displayDate","dateObj","formatTemplate","options","Date","format","Error","daysInMonth","month","year","possibleDaysInFebruary","isLeap","t","curDay","getDate","curYear","getFullYear","curDate","day","this","getDay","curMonth","getMonth","convertDateObjToHTMLInputVal","date","yyyy","mm","formatNumbToStr","dd","rangeOfWeek","today","toDate","result","thisMonth","thisYear","numberOfDaysInLastMonth","numberOfDaysInThisMonth","firstDayInWeek","lastDayInWeek","condition","lastDaysOfEndingMonth","firstDaysOfIncomingMonth","i","push","j","getBirthsInWeek","contacts","arr1","arr2","dayInWeekArr","birthsInLastMonth","getBirthsInMonth","birthsInCurrentMonth","birthsInNextMonth","Array","isArray","sortByDay","filter","contact","birth","indexOf","concat","birthsInMonth","getListOfBirthsToday","LoadingPopup","props","Popup","handleClose","e","closeFuncArgs","Spinner","colorClass","AsyncPopup","modalProps","fallbackModalProps","AsyncLoader","fallback","children","FormContainer","React","lazy","AsyncCFormPopup","commonPopupProps","isOpen","ccardProps","sortByName","contactsList","sort","a","b","x","name","toLowerCase","y","birthA","birthB","parseInt","split","MainNavContainer","state","isOpenCreateContactForm","isShowCbookSwitcher","delBtnRef","createRef","pressDelAllTimer","onClickAddNewContact","bind","setTimer","clearTimer","delAllContacts","onClickDelete","onClickCbookSwitcher","closeCbookSwitcherModal","openCreateContactForm","closeCreateContactForm","openCbookSwitcherModal","setState","length","openConfirmDialog","res","deleteAllContacts","closeConfirmDialog","header","body","showNoti","setTimeout","clearTimeout","isMarked","deleteSelectedContacts","numOfCheckedItems","openFilterSubNav","totalContactsAmount","PropTypes","arrayOf","instanceOf","classes","Contact","isRequired","PureComponent","connect","ownProps","filterState","useEffect","birthsToday","contactsNames","forEach","idx","prepBirthNoti","filteredContacts","fileInputRef","contactsHaveBirthInWeek","contactsHaveBirthInMonth","className","ref","type","id","accept","onChange","fileToLoad","current","files","reader","FileReader","addEventListener","fileLoadedEvent","textFromFileLoaded","target","dataParsedFromTextFile","JSON","parse","importContacts","readAsText","onClick","value","allContacts","birthsInWeekAmount","birthsInMonthAmount","onRestoreData","window","click","alert","onBackupData","store","bodyElem","document","fileName","prompt","textToWrite","stringify","getState","replace","textFileAsBlob","Blob","navigator","msSaveOrOpenBlob","downloadLink","createElement","download","innerHTML","polyURL","URL","webkitURL","href","createObjectURL","removeChild","style","display","appendChild","useState","isSticky","setSticky","subNavRef","useRef","subNavOffsetTop","offsetTop","currentPosition","scrollY","requestAnimationFrame","toggleStickyNav","console","error","selectBtnLabel","classNames","invisible","data","cursor","action","markAllContact","unmarkAllContact","label","ContactsList","AsyncContactsList","SubNav","zIndex","role","tabIndex","onClickFilter","filterStateSlug","changeStateToWeek","changeStateToMonth","changeStateToAll","aria-label","active","alertNotFinishedFeature","memoizeOne","alignRight","Toggle","bsPrefix","variant","title","Menu","overflow","Item","isDropdownBtn","inputId","btnRef","htmlFor","moreClass","icon","iconStyle","onKeyDown","keyCode","onKeyUp","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","CbookSwitcherContainer","AsyncCbookSwitcherModal","switcherProps","MainNav","lighter","jump"],"mappings":"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","file":"6.js","sourcesContent":["import React, { memo } from 'react';\n\nimport MainNav from '../MainNav/containers/MainNavContainer.jsx';\nimport MainContent from '../MainContent/containers/MainContentContainer.jsx';\nimport adbk from '../../controllers/adbk.js';\n\nconst MainPage = () => {\n  adbk.doTaskAfterDataLoaded(() => {\n    if (adbk.redux.history.location.pathname === '/') {\n      const cbookId = adbk.getDefaultCbookId();\n      adbk.url.switchCbook(cbookId);\n    }\n  });\n\n  return (\n    <>\n      <MainContent />\n      <MainNav />\n    </>\n  );\n};\n\nexport default memo(MainPage);\n","import { sortByDay } from './sortHelper';\nimport { formatNumbToStr } from './utilsHelper';\nimport { format } from 'date-fns';\n\nexport const displayDateObject = (dateObj, formatTemplate = 'd MMMM yyyy', options) => {\n  if (dateObj instanceof Date) {\n    return format(dateObj, formatTemplate, options);\n  } else throw new Error('[helper: displayDate] date !instanceof Date');\n};\nexport const displayDate = displayDateObject;\n\nexport const isLeap = (year) => {\n  return !(year % 4 || (year % 100 === 0 && year % 400));\n};\n\nexport const daysInMonth = (month, year) => {\n  // calculate the number of days in a month\n  const possibleDaysInFebruary = isLeap(year) ? 29 : 28;\n  const possibleDaysInNormalMonths = 31 - (((month - 1) % 7) % 2);\n  return month === 2 ? possibleDaysInFebruary : possibleDaysInNormalMonths;\n};\n\nconst t = (() => {\n  const newDateObj = new Date();\n\n  newDateObj.curDay = newDateObj.getDate;\n  newDateObj.curYear = newDateObj.getFullYear;\n  newDateObj.curDate = function() {\n    // convert the original getDay() method:\n    // myGetDay return the order of today in week,\n    // the first date is Monday (not Sunday), still 0-based\n    const day = this.getDay();\n    return day === 0 ? 6 : day - 1;\n  };\n  newDateObj.curMonth = function() {\n    return this.getMonth() + 1;\n  };\n\n  return newDateObj;\n})();\n\nexport const timeObj = t;\n\nexport const convertDateObjToHTMLInputVal = (date) => {\n  if (date instanceof Date) {\n    const yyyy = date.getFullYear();\n    const mm = formatNumbToStr(date.getMonth() + 1, 2);\n    const dd = formatNumbToStr(date.getDate(), 2);\n    return `${yyyy}-${mm}-${dd}`;\n  } else throw new Error('[helper: convertDateObjToHTMLInputVal] Input is not an instance of Date.');\n};\n\n// DONE\nexport const rangeOfWeek = (today = t.curDay(), toDate = t.curDate()) => {\n  // Calculate range (array) of days in current week\n  const result = [];\n  // toDate = testDateNum > -1 ? testDateNum : t.curDate(),\n  const thisMonth = t.curMonth();\n  const thisYear = t.curYear();\n  const numberOfDaysInLastMonth =\n    thisMonth === 1 ? daysInMonth(12, thisYear - 1) : daysInMonth(thisMonth - 1, thisYear);\n  const numberOfDaysInThisMonth = daysInMonth(thisMonth, thisYear);\n  const numberOfDaysInNextMonth =\n    thisMonth === 12 ? daysInMonth(1, thisYear + 1) : daysInMonth(thisMonth + 1, thisYear);\n  const firstDayInWeek = today - toDate + (today - toDate < 1 ? numberOfDaysInLastMonth : 0);\n  const lastDayInWeek =\n    today + 7 - toDate - 1 - (today + 7 - toDate - 1 > numberOfDaysInThisMonth ? numberOfDaysInThisMonth : 0);\n  // lastDayInWeek = firstDayInWeek + 6 - ((firstDayInWeek + 6 > numberOfDaysInThisMonth) ? numberOfDaysInThisMonth : 0);\n\n  if (firstDayInWeek > lastDayInWeek) {\n    // today > 15 && firstDayInWeek > lastDayInWeek let us know this week is the transforming week\n    const condition = today > 15 ? numberOfDaysInThisMonth : numberOfDaysInLastMonth;\n    const lastDaysOfEndingMonth = [];\n    const firstDaysOfIncomingMonth = [];\n    for (let i = firstDayInWeek; i <= condition; i++) {\n      lastDaysOfEndingMonth.push(i);\n    }\n    for (let j = 1; j <= lastDayInWeek; j++) {\n      firstDaysOfIncomingMonth.push(j);\n    }\n    result.push(lastDaysOfEndingMonth, firstDaysOfIncomingMonth);\n  } else {\n    for (let i = firstDayInWeek; i <= lastDayInWeek; i++) {\n      result.push(i);\n    }\n  }\n\n  return result;\n};\n\n// DONE\nexport const getBirthsInWeek = (contacts, dayInWeekArr = rangeOfWeek()) => {\n  const curDay = t.curDay();\n  const curMonth = t.curMonth();\n  const curYear = t.curYear();\n  const birthsInLastMonth = getBirthsInMonth(contacts, curMonth - 1 === 0 ? 12 : curMonth - 1);\n  const birthsInCurrentMonth = getBirthsInMonth(contacts, curMonth);\n  const birthsInNextMonth = getBirthsInMonth(contacts, curMonth + 1 === 13 ? 1 : curMonth + 1);\n\n  if (Array.isArray(dayInWeekArr[0])) {\n    // if we have array, it means that we have a transforming-week: a week have days in current month & previous/next month\n    let arr1, arr2;\n\n    if (curDay > 15) {\n      // we're in last days of the current month\n\n      arr1 = sortByDay(\n        birthsInCurrentMonth.filter((contact) => {\n          const birth = contact.birth ? contact.birth.getDate() : 0;\n          return dayInWeekArr[0].indexOf(birth) !== -1;\n        })\n      );\n\n      arr2 = sortByDay(\n        birthsInNextMonth.filter((contact) => {\n          const birth = contact.birth ? contact.birth.getDate() : 0;\n          return dayInWeekArr[1].indexOf(birth) !== -1;\n        })\n      );\n    } else {\n      // we're in first days of the current month\n\n      arr1 = sortByDay(\n        birthsInLastMonth.filter((contact) => {\n          const birth = contact.birth ? contact.birth.getDate() : 0;\n          return dayInWeekArr[0].indexOf(birth) !== -1;\n        })\n      );\n\n      arr2 = sortByDay(\n        birthsInCurrentMonth.filter((contact) => {\n          const birth = contact.birth ? contact.birth.getDate() : 0;\n          return dayInWeekArr[1].indexOf(birth) !== -1;\n        })\n      );\n    }\n\n    return arr1.concat(arr2);\n  } else {\n    // we're in the middle of the current month\n    return sortByDay(\n      birthsInCurrentMonth.filter((contact) => {\n        const birth = contact.birth ? contact.birth.getDate() : 0;\n        return dayInWeekArr.indexOf(birth) !== -1;\n      })\n    );\n  }\n};\n\n// DONE\nexport const getBirthsInMonth = (contacts, month = t.curMonth()) => {\n  const birthsInMonth = contacts.filter((contact) => {\n    return contact.birth && contact.birth.getMonth() + 1 === month;\n  });\n  return sortByDay(birthsInMonth);\n};\n\nexport const getListOfBirthsToday = (contacts) => {\n  const today = t.curDay();\n  const birthsInMonth = getBirthsInMonth(contacts);\n  const birthsToday = birthsInMonth.filter((contact) => contact.birth && contact.birth.getDate() === today);\n  return birthsToday;\n};\n\nexport const filterBirthsToday = (contacts) => {\n  // re-update happy-birthday list\n  // let birthsToday;\n\n  // if (needToBeReSorted) {\n  //     birthsToday = getListOfBirthsToday();\n  //     localStorage.birthsToday = JSON.stringify(birthsToday);\n\n  // } else if (localStorage.lastVisited === `${t.curDay()}/${t.curMonth()}`) {\n  //     // Memoization technique: no need to do the job if the func is called more than two times a day\n  //     birthsToday = JSON.parse(localStorage.birthsToday);\n\n  // } else {\n  //     birthsToday = getListOfBirthsToday();\n  //     localStorage.birthsToday = JSON.stringify(birthsToday);\n  //     localStorage.lastVisited = `${t.curDay()}/${t.curMonth()}`;\n  // }\n  const birthsToday = getListOfBirthsToday(contacts);\n  return contacts.map((contact) => {\n    contact.hpbd = birthsToday.includes((contactHasBirthToday) => {\n      return contactHasBirthToday.name === contact.name;\n    });\n    return contact;\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Popup from './Popup.jsx';\nimport Spinner from '../Spinner/Spinner.jsx';\n\nconst LoadingPopup = (props) => (\n  <Popup handleClose={(e) => props.handleClose(props.closeFuncArgs)}>\n    <Spinner colorClass=\"text-light\" />\n  </Popup>\n);\n\nLoadingPopup.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  closeFuncArgs: PropTypes.any,\n};\n\nexport default LoadingPopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AsyncLoader from '../AsyncLoader/AsyncLoader.jsx';\nimport LoadingPopup from './LoadingPopup.jsx';\nimport Popup from './Popup.jsx';\n\nconst AsyncPopup = (props) => {\n  const modalProps = { ...props.modalProps };\n  const fallbackModalProps = { ...props.fallbackModalProps };\n  return (\n    <AsyncLoader fallback={<LoadingPopup {...fallbackModalProps} />}>\n      <Popup {...modalProps}>{props.children}</Popup>\n    </AsyncLoader>\n  );\n};\n\nAsyncPopup.propTypes = {\n  children: PropTypes.element,\n  modalProps: PropTypes.object,\n  fallbackModalProps: PropTypes.object,\n};\n\nexport default AsyncPopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AsyncPopup from '../Popup/AsyncPopup.jsx';\nconst FormContainer = React.lazy(() => import(/* webpackPreload: true */ './containers/FormContainer.jsx'));\n\nconst AsyncCFormPopup = (props) => {\n  const commonPopupProps = {\n    isOpen: props.modalProps.isOpen,\n    handleClose: props.modalProps.handleClose,\n  };\n  const ccardProps = { ...props };\n  delete ccardProps.modalProps;\n  return (\n    <AsyncPopup modalProps={{ ...commonPopupProps }} fallbackModalProps={{ ...commonPopupProps }}>\n      <FormContainer {...ccardProps} handleClose={props.modalProps.handleClose} />\n    </AsyncPopup>\n  );\n};\nAsyncCFormPopup.propTypes = {\n  modalProps: PropTypes.shape({\n    isOpen: PropTypes.bool.isRequired,\n    handleClose: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default AsyncCFormPopup;\n","export const sortByName = contactsList => {\n  return contactsList.sort((a, b) => {\n    const x = a.name.toLowerCase();\n    const y = b.name.toLowerCase();\n    if (x < y) {\n      return -1;\n    } else if (x > y) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n};\n\nexport const sortByDay = contactsList => {\n  return contactsList.sort((a, b) => {\n    let birthA, birthB;\n    if (typeof a.birth === 'string') {\n      birthA = parseInt(a.birth.split('-')[2], 10);\n      birthB = parseInt(b.birth.split('-')[2], 10);\n    } else {\n      birthA = a.birth.getDate();\n      birthB = b.birth.getDate();\n    }\n    return birthA - birthB;\n  });\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport MainNav from '../MainNav.jsx';\n\nclass MainNavContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpenCreateContactForm: false,\n      isShowCbookSwitcher: false,\n    };\n    this.delBtnRef = React.createRef();\n    // this.isLongPressActivated = null;// WHY THIS SHOULD BE IMPLEMENTED????? WHAT IS THE POINT?\n    this.pressDelAllTimer = null;\n\n    this.onClickAddNewContact = this.onClickAddNewContact.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n    this.clearTimer = this.clearTimer.bind(this);\n    this.delAllContacts = this.delAllContacts.bind(this);\n    this.onClickDelete = this.onClickDelete.bind(this);\n\n    this.onClickCbookSwitcher = this.onClickCbookSwitcher.bind(this);\n    this.closeCbookSwitcherModal = this.closeCbookSwitcherModal.bind(this);\n\n    this.openCreateContactForm = this.openCreateContactForm.bind(this);\n    this.closeCreateContactForm = this.closeCreateContactForm.bind(this);\n  }\n\n  static get propTypes() {\n    return {\n      contacts: PropTypes.arrayOf(PropTypes.instanceOf(adbk.classes.Contact).isRequired).isRequired,\n    };\n  }\n\n  // shouldComponentUpdate (nextProps) {}\n\n  // openBackupRestoreSubNav(e) {\n  //     // const filterBtnGroup = document.getElementsByClassName('filter-sub-nav')[0];\n  //     const backupBtnGroup = document.getElementsByClassName('backup-restore-sub-nav')[0];\n  //     // filterBtnGroup.classList.add('translatedDown200');\n  //     backupBtnGroup.classList.toggle('translatedDown100');\n  // }\n  //\n  // openFilterSubNav(e) {\n  //     // const filterBtnGroup = document.getElementsByClassName('filter-sub-nav')[0];\n  //     const backupBtnGroup = document.getElementsByClassName('backup-restore-sub-nav')[0];\n  //     backupBtnGroup.classList.add('translatedDown100');\n  //     // filterBtnGroup.classList.toggle('translatedDown200');\n  // }\n\n  onClickCbookSwitcher(e) {\n    this.openCbookSwitcherModal();\n  }\n\n  openCbookSwitcherModal() {\n    this.setState({\n      isShowCbookSwitcher: true,\n    });\n  }\n\n  closeCbookSwitcherModal(e) {\n    this.setState({\n      isShowCbookSwitcher: false,\n    });\n  }\n\n  onClickAddNewContact(e) {\n    this.openCreateContactForm();\n  }\n\n  delAllContacts() {\n    // if data is empty already, no need to do anything\n    if (this.props.contacts.length === 0) {\n      adbk.showNoti('alert', 'There is no data left. Is it bad?');\n      return;\n    }\n\n    adbk.openConfirmDialog(\n      (res) => {\n        if (res) adbk.deleteAllContacts();\n        adbk.closeConfirmDialog();\n      },\n      {\n        header: 'Confirm to delete ALL contacts in current Contacts Book',\n        body: 'This can not be undone. Please make sure you want to do it!',\n      }\n    );\n  }\n\n  setTimer(e) {\n    const handleLongPress = () => {\n      this.delAllContacts();\n      // this.isLongPressActivated = true;// DEAR PAST ME: WHY THIS SHOULD BE IMPLEMENTED????? WHAT IS THE POINT?\n    };\n    this.pressDelAllTimer = setTimeout(handleLongPress, 600);\n  }\n\n  clearTimer(e) {\n    // DEAR PAST ME: WHY THIS SHOULD BE IMPLEMENTED????? WHAT IS THE POINT?\n    // if (this.isLongPressActivated) {\n    //   const captureClick = (e) => {\n    //     e.stopPropagation();\n    //     // cleanup\n    //     this.delBtnRef.current.parentNode.removeEventListener('click', captureClick, true); // A BUG???\n    //     this.isLongPressActivated = false;\n    //   };\n    //   this.delBtnRef.current.parentNode.addEventListener('click', captureClick, true); // listener for the capture phase instead of the bubbling phase\n    // }\n\n    clearTimeout(this.pressDelAllTimer);\n    this.pressDelAllTimer = null;\n  }\n\n  onClickDelete(e) {\n    const numOfCheckedItems = this.props.contacts.filter((contact) => contact.isMarked).length;\n    if (numOfCheckedItems > 0) {\n      adbk.openConfirmDialog((res) => {\n        if (res) adbk.deleteSelectedContacts();\n        adbk.closeConfirmDialog();\n      });\n    } else {\n      adbk.showNoti('alert', 'Long-press to delete all contacts');\n    }\n  }\n\n  openCreateContactForm() {\n    this.setState({\n      isOpenCreateContactForm: true,\n    });\n  }\n\n  closeCreateContactForm() {\n    this.setState({\n      isOpenCreateContactForm: false,\n    });\n  }\n\n  render() {\n    const numOfCheckedItems = this.props.contacts.filter((contact) => contact.isMarked).length;\n    return (\n      <MainNav\n        onClickAddNewContact={this.onClickAddNewContact}\n        openFilterSubNav={this.openFilterSubNav}\n        setTimer={this.setTimer}\n        clearTimer={this.clearTimer}\n        delBtnRef={this.delBtnRef}\n        onClickDelete={this.onClickDelete}\n        totalContactsAmount={this.props.contacts.length}\n        numOfCheckedItems={numOfCheckedItems}\n        isShowCbookSwitcher={this.state.isShowCbookSwitcher}\n        onClickCbookSwitcher={this.onClickCbookSwitcher}\n        closeCbookSwitcherModal={this.closeCbookSwitcherModal}\n        isOpenCreateContactForm={this.state.isOpenCreateContactForm}\n        closeCreateContactForm={this.closeCreateContactForm}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({ contacts: state.contacts, ...ownProps });\nexport default connect(mapStateToProps)(MainNavContainer); // export default MainNavContainer;\n// export default MainNavContainer;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getListOfBirthsToday, getBirthsInWeek, getBirthsInMonth } from '../../../helpers/timeHelper';\nimport { sortByName } from '../../../helpers/sortHelper';\nimport * as ls from '../../../services/localStorageService';\n\nimport MainContent from '../MainContent.jsx';\n// import adbk from '../../../controllers/adbk';\n\nconst MainContentContainer = (props) => {\n  useEffect(() => {\n    const birthsToday = getListOfBirthsToday(props.contacts);\n    const prepBirthNoti = (contactsNames) => {\n      birthsToday.forEach((contact, idx) => {\n        if (idx === 0) {\n          return;\n        }\n        contactsNames += ` & ${contact.name}`;\n      });\n      return `Today is ${contactsNames}'s birthday!! Wish ${\n        birthsToday.length > 1 ? 'them' : 'him/her'\n      } a happy birthday!`;\n    };\n\n    if (birthsToday.length > 0) {\n      const contactsNames = birthsToday[0].name;\n      adbk.showNoti('alert', prepBirthNoti(contactsNames));\n    }\n  }, [props.contacts]);\n\n  const fileInputRef = React.createRef();\n  const contactsHaveBirthInWeek = getBirthsInWeek(props.contacts);\n  const contactsHaveBirthInMonth = getBirthsInMonth(props.contacts);\n  let filteredContacts;\n  switch (props.filterState) {\n    case 1:\n      filteredContacts = contactsHaveBirthInWeek;\n      break;\n    case 2:\n      filteredContacts = contactsHaveBirthInMonth;\n      break;\n    default:\n      filteredContacts = sortByName(props.contacts);\n  }\n\n  const onUploadFile = (e) => {\n    const fileToLoad = fileInputRef.current.files[0];\n\n    if (fileToLoad) {\n      const reader = new FileReader();\n\n      reader.addEventListener(\n        'load',\n        (fileLoadedEvent) => {\n          const textFromFileLoaded = fileLoadedEvent.target.result;\n          const dataParsedFromTextFile = JSON.parse(textFromFileLoaded);\n          adbk.importContacts(dataParsedFromTextFile);\n        },\n        false\n      );\n      reader.readAsText(fileToLoad, 'UTF-8');\n    }\n  };\n  const onBackupData = (e) => {\n    const store = adbk.redux.store;\n    const bodyElem = document.body;\n    if ('Blob' in window) {\n      const destroyClickedElement = (e) => {\n        bodyElem.removeChild(e.target);\n      };\n\n      let fileName = prompt('Type the name for your backup file:', 'contacts_backupFile.txt');\n      fileName = fileName === '' ? 'contacts_backupFile.txt' : fileName;\n\n      if (fileName) {\n        const textToWrite = JSON.stringify(store.getState().contacts).replace(/\\n/g, '\\r\\n');\n        const textFileAsBlob = new Blob([textToWrite], { type: 'text/plain' });\n\n        if ('msSaveOrOpenBlob' in navigator) {\n          navigator.msSaveOrOpenBlob(textFileAsBlob, fileName);\n        } else {\n          const downloadLink = document.createElement('a');\n          downloadLink.download = fileName;\n          downloadLink.innerHTML = 'Download File';\n\n          if ('webkitURL' in window) {\n            // Chrome allows the link to be clicked without actually adding it to the DOM.\n            const polyURL = window.URL || window.webkitURL;\n            downloadLink.href = polyURL.createObjectURL(textFileAsBlob);\n          } else {\n            downloadLink.href = window.URL.createObjectURL(textFileAsBlob); // Firefox requires the link to be added to the DOM before it can be clicked.\n            downloadLink.addEventListener('click', destroyClickedElement);\n            downloadLink.style.display = 'none';\n            bodyElem.appendChild(downloadLink);\n          }\n\n          downloadLink.click();\n        }\n\n        adbk.showNoti('success', 'We have exported your data. Save it to safe place!');\n      }\n    } else {\n      adbk.showNoti('alert', 'Sorry, your browser does not support this feature.');\n    }\n  };\n  const onRestoreData = (e) => {\n    if ('FileReader' in window) {\n      fileInputRef.current.click();\n    } else {\n      alert('Sorry, your browser does not support this feature.');\n    }\n  };\n  const onClickFileInput = (e) => {\n    e.target.value = null;\n  };\n\n  const numOfCheckedItems = props.contacts.filter((contact) => contact.isMarked).length;\n  return (\n    <>\n      <div className=\"file-input-container\">\n        <input\n          ref={fileInputRef}\n          className=\"d-none\"\n          type=\"file\"\n          id=\"inptFileBtn\"\n          accept=\".txt\"\n          onChange={onUploadFile}\n          onClick={onClickFileInput}\n        />\n      </div>\n      <MainContent\n        filterState={props.filterState}\n        numOfCheckedItems={numOfCheckedItems}\n        allContacts={props.contacts}\n        filteredContacts={filteredContacts}\n        birthsInWeekAmount={contactsHaveBirthInWeek.length}\n        birthsInMonthAmount={contactsHaveBirthInMonth.length}\n        onRestoreData={onRestoreData}\n        onBackupData={onBackupData}\n      />\n    </>\n  );\n};\n\nMainContentContainer.propTypes = {\n  filterState: PropTypes.number.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.instanceOf(adbk.classes.Contact)).isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  contacts: state.contacts,\n  filterState: state.filterState,\n  ...ownProps,\n});\nexport default connect(mapStateToProps)(MainContentContainer);\n","import React, { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport AsyncContactsList from '../ContactsList/AsyncContactsList.jsx';\nimport SubNav from '../SubNav/SubNav.jsx';\n\nconst MainContent = (props) => {\n  const [isSticky, setSticky] = useState(false);\n  const subNavRef = React.useRef();\n  const subNavOffsetTop = React.useRef(0); // explain why we have to use subNavOffsetTop with React.useRef\n  window.addEventListener('scroll', (e) => {\n    if (subNavRef.current) {\n      subNavOffsetTop.current = subNavOffsetTop.current || subNavRef.current.offsetTop;\n      const currentPosition = window.scrollY;\n      const toggleStickyNav = (currentPosition) => {\n        return currentPosition > subNavOffsetTop.current;\n      };\n      window.requestAnimationFrame(() => {\n        try {\n          setSticky(toggleStickyNav(currentPosition));\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    }\n  });\n\n  const selectBtnLabel =\n    props.numOfCheckedItems !== props.allContacts.length ? (\n      <>\n        <i className=\"far fa-check-circle\" />\n        &nbsp;&nbsp;Select all\n      </>\n    ) : (\n      <>\n        <i className=\"fas fa-check-circle\" />\n        &nbsp;&nbsp;Unselect all\n      </>\n    );\n\n  return (\n    <main className=\"d-flex flex-column main\">\n      <header className=\"header\">\n        <h1 className=\"header__title\">Contacts Book</h1>\n      </header>\n      <SubNav\n        subNavRef={subNavRef}\n        filterState={props.filterState}\n        totalContactsAmount={props.allContacts.length}\n        birthsInWeekAmount={props.birthsInWeekAmount}\n        birthsInMonthAmount={props.birthsInMonthAmount}\n        onBackupData={props.onBackupData}\n        onRestoreData={props.onRestoreData}\n        numOfCheckedItems={props.numOfCheckedItems}\n      />\n      <SubNav\n        className={classNames('p-1 bg-light fixed-top shadow', {\n          invisible: !isSticky,\n        })}\n        isSticky={isSticky}\n        filterState={props.filterState}\n        totalContactsAmount={props.allContacts.length}\n        birthsInWeekAmount={props.birthsInWeekAmount}\n        birthsInMonthAmount={props.birthsInMonthAmount}\n        onBackupData={props.onBackupData}\n        onRestoreData={props.onRestoreData}\n        numOfCheckedItems={props.numOfCheckedItems}\n      />\n      <AsyncContactsList data={props.filteredContacts} />\n      {!!props.numOfCheckedItems && (\n        <div\n          className={classNames('d-md-none', {\n            'my-3 my-md-0': !!props.numOfCheckedItems,\n          })}>\n          <a\n            style={{ cursor: 'pointer' }}\n            onClick={\n              props.numOfCheckedItems !== props.allContacts.length\n                ? adbk.redux.action.contacts.markAllContact\n                : adbk.redux.action.contacts.unmarkAllContact\n            }\n            label={props.numOfCheckedItems !== props.allContacts.length ? 'Check all' : 'Uncheck all'}>\n            {selectBtnLabel}\n          </a>\n        </div>\n      )}\n      <p className=\"text-center text-md-right text-gray\">&copy; 2020</p>\n    </main>\n  );\n};\n\nMainContent.propTypes = {\n  // subNavRef: PropTypes.object.isRequired,\n  // isSticky: PropTypes.bool.isRequired,\n  birthsInWeekAmount: PropTypes.number.isRequired,\n  birthsInMonthAmount: PropTypes.number.isRequired,\n  allContacts: PropTypes.arrayOf(PropTypes.instanceOf(adbk.classes.Contact).isRequired).isRequired,\n  filteredContacts: PropTypes.arrayOf(PropTypes.instanceOf(adbk.classes.Contact).isRequired).isRequired,\n  onRestoreData: PropTypes.func.isRequired,\n  onBackupData: PropTypes.func.isRequired,\n  filterState: PropTypes.number.isRequired,\n  numOfCheckedItems: PropTypes.number.isRequired,\n};\n\nexport default memo(MainContent);\n","import React from 'react';\n\nimport AsyncLoader from '../AsyncLoader/AsyncLoader.jsx';\nconst ContactsList = React.lazy(() => import(/* webpackPreload: true */ './ContactsList.jsx'));\n\nconst AsyncContactsList = (props) => (\n  <AsyncLoader>\n    <ContactsList {...props} />\n  </AsyncLoader>\n);\n\nexport default AsyncContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\n// import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport ContactsFilter from '../ContactsList/ContactsFilter.jsx';\nimport SubNavDropdown from './SubNavDropdown.jsx';\n\nconst SubNav = (props) => {\n  const selectBtnLabel =\n    props.numOfCheckedItems !== props.totalContactsAmount ? (\n      <>\n        <i className=\"far fa-check-circle\" />\n        &nbsp;&nbsp;Select all\n      </>\n    ) : (\n      <>\n        <i className=\"fas fa-check-circle\" />\n        &nbsp;&nbsp;Unselect all\n      </>\n    );\n\n  return (\n    <div\n      ref={props.subNavRef}\n      className={classNames('d-flex flex-wrap align-items-center justify-content-between sub-nav', {\n        [props.className]: typeof props.className === 'string',\n      })}\n      style={{\n        zIndex: 10,\n      }}>\n      <div className=\"col col-md-auto px-0\">\n        <ContactsFilter\n          filterState={props.filterState}\n          totalContactsAmount={props.totalContactsAmount}\n          // beingDisplayedContactsAmount={props.filteredContacts.length}\n          birthsInWeekAmount={props.birthsInWeekAmount}\n          birthsInMonthAmount={props.birthsInMonthAmount}\n        />\n      </div>\n      <div className=\"col-auto px-0 ml-auto order-md-3\">\n        <SubNavDropdown\n          totalContactsAmount={props.totalContactsAmount}\n          numOfCheckedItems={props.numOfCheckedItems}\n          onBackupData={props.onBackupData}\n          onRestoreData={props.onRestoreData}\n        />\n      </div>\n      {!!props.numOfCheckedItems && (\n        <div\n          className={classNames('d-none d-md-block col-12 col-md-auto mr-md-auto order-md-2', {\n            'my-3 my-md-0': !!props.numOfCheckedItems,\n          })}>\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/anchor-is-valid */}\n          <span\n            style={{\n              cursor: 'pointer',\n              display: 'contents',\n            }}\n            onClick={\n              props.numOfCheckedItems !== props.totalContactsAmount\n                ? adbk.redux.action.contacts.markAllContact\n                : adbk.redux.action.contacts.unmarkAllContact\n            }\n            label={props.numOfCheckedItems !== props.totalContactsAmount ? 'Check all' : 'Uncheck all'}\n            role=\"button\"\n            tabIndex=\"0\">\n            {selectBtnLabel}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  subNavRef: PropTypes.any,\n  birthsInWeekAmount: PropTypes.number.isRequired,\n  birthsInMonthAmount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  filterState: PropTypes.number.isRequired,\n  totalContactsAmount: PropTypes.number.isRequired,\n  numOfCheckedItems: PropTypes.number.isRequired,\n  onRestoreData: PropTypes.func.isRequired,\n  onBackupData: PropTypes.func.isRequired,\n};\n\nexport default SubNav;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst ContactsFilter = (props) => {\n  const onClickFilter = (filterStateSlug) => {\n    switch (filterStateSlug) {\n      case 'week':\n        adbk.redux.action.filterState.changeStateToWeek();\n        break;\n      case 'month':\n        adbk.redux.action.filterState.changeStateToMonth();\n        break;\n      default:\n        adbk.redux.action.filterState.changeStateToAll();\n        break;\n    }\n  };\n  const onClickShowAll = (e) => {\n    onClickFilter('all');\n  };\n  const onClickFilterBirthsInWeek = (e) => {\n    onClickFilter('week');\n  };\n  const onClickFilterBirthsInMonth = (e) => {\n    onClickFilter('month');\n  };\n  return (\n    <nav aria-label=\"Contacts list filter\" className=\"contact-filter\">\n      <ul className=\"pagination pagination-sm mb-0\">\n        <li className={classNames('page-item', { active: props.filterState === 0 })}>\n          <a className=\"page-link\" onClick={onClickShowAll}>\n            All\n            <span className=\"contact-filter__hint-numb d-none d-md-inline\">&nbsp;({props.totalContactsAmount})</span>\n          </a>\n        </li>\n        <li className={classNames('page-item', { active: props.filterState === 1 })}>\n          <a className=\"page-link\" onClick={onClickFilterBirthsInWeek}>\n            Births in week\n            <span className=\"contact-filter__hint-numb d-none d-md-inline\">&nbsp;({props.birthsInWeekAmount})</span>\n          </a>\n        </li>\n        <li className={classNames('page-item', { active: props.filterState === 2 })}>\n          <a className=\"page-link\" onClick={onClickFilterBirthsInMonth}>\n            Births in month\n            <span className=\"contact-filter__hint-numb d-none d-md-inline\">&nbsp;({props.birthsInMonthAmount})</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nContactsFilter.propTypes = {\n  filterState: PropTypes.number.isRequired,\n  totalContactsAmount: PropTypes.number.isRequired,\n  birthsInWeekAmount: PropTypes.number.isRequired,\n  birthsInMonthAmount: PropTypes.number.isRequired,\n};\n\nexport default memo(ContactsFilter);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\n// import { Link } from 'react-router-dom';\nimport memoizeOne from 'memoize-one';\n\nconst alertNotFinishedFeature = memoizeOne(() => {\n  adbk.showNoti('alert', 'This feature is not finished yet!');\n});\nconst SubNavDropdown = (props) => {\n  return (\n    <Dropdown alignRight>\n      <Dropdown.Toggle\n        bsPrefix=\"a\"\n        href=\"#\"\n        variant=\"\"\n        id=\"dropdown-basic\"\n        className=\"settings-btn\"\n        title=\"Open popup menu\">\n        <i className=\"fas fa-sliders-h\" />\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"border-0 shadow\" style={{ overflow: 'hidden' }}>\n        <Dropdown.Item className=\"py-2\" onClick={alertNotFinishedFeature}>\n          <i className=\"fas fa-sort-amount-down\" />\n          &nbsp;&nbsp;Sort\n        </Dropdown.Item>\n        <Dropdown.Item className=\"py-2\" onClick={alertNotFinishedFeature}>\n          <i className=\"fas fa-filter\" />\n          &nbsp;&nbsp;More filter\n        </Dropdown.Item>\n        <hr />\n        {props.totalContactsAmount !== 0 && (\n          <Dropdown.Item\n            className=\"py-2\"\n            onClick={\n              props.numOfCheckedItems !== props.totalContactsAmount\n                ? adbk.redux.action.contacts.markAllContact\n                : adbk.redux.action.contacts.unmarkAllContact\n            }>\n            <i className=\"fas fa-user-check\" />\n            &nbsp;&nbsp;\n            {props.numOfCheckedItems !== props.totalContactsAmount ? 'Select all' : 'Unselect all'}\n          </Dropdown.Item>\n        )}\n        <Dropdown.Item className=\"py-2\" onClick={props.onBackupData}>\n          <i className=\"fas fa-download\" />\n          &nbsp;&nbsp;Backup\n        </Dropdown.Item>\n        <Dropdown.Item className=\"py-2\" onClick={props.onRestoreData}>\n          <i className=\"fas fa-upload\" />\n          &nbsp;&nbsp;Restore\n        </Dropdown.Item>\n        <hr />\n        {/* <Link className=\"py-2 dropdown-item\" to=\"/settings\"> */}\n        <Dropdown.Item className=\"py-2\" onClick={alertNotFinishedFeature}>\n          <i className=\"fas fa-cogs\" />\n          &nbsp;&nbsp;Settings\n        </Dropdown.Item>\n        <Dropdown.Item className=\"py-2\" href=\"/signout\">\n          <i className=\"fas fa-door-open\" />\n          &nbsp;&nbsp;Sign out\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nSubNavDropdown.propTypes = {\n  totalContactsAmount: PropTypes.number.isRequired,\n  numOfCheckedItems: PropTypes.number.isRequired,\n  onRestoreData: PropTypes.func.isRequired,\n  onBackupData: PropTypes.func.isRequired,\n};\n\nexport default memo(SubNavDropdown);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst NavBtn = (props) => {\n  if (props.isDropdownBtn && props.inputId) {\n    return (\n      <label\n        ref={props.btnRef}\n        htmlFor={props.inputId}\n        className={classNames('main-nav__item', {\n          [props.moreClass]: !!props.moreClass,\n        })}\n        onClick={props.onClick}>\n        <i\n          className={classNames('fa', {\n            [props.icon]: !!props.icon,\n          })}\n          style={{\n            ...props.iconStyle,\n          }}\n        />\n        <span className=\"main-nav__item-label\">{props.label}</span>\n      </label>\n    );\n  }\n  // React.forwardRef((props, ref) => {\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => {\n        if (e.keyCode === 53) {\n        }\n      }}\n      onKeyUp={(e) => {\n        if (e.keyCode === 53) {\n        }\n      }}\n      ref={props.btnRef}\n      className={classNames('main-nav__item', {\n        [props.moreClass]: !!props.moreClass,\n      })}\n      onClick={props.onClick}\n      onMouseDown={props.onMouseDown}\n      onMouseUp={props.onMouseUp}\n      onTouchStart={props.onMouseDown}\n      onTouchEnd={props.onMouseUp}>\n      <i\n        className={classNames('fa', {\n          [props.icon]: !!props.icon,\n        })}\n        style={{\n          ...props.iconStyle,\n        }}\n      />\n      <span className=\"main-nav__item-label\">{props.label}</span>\n    </div>\n  );\n};\n\nNavBtn.propTypes = {\n  btnRef: PropTypes.object,\n  onClick: PropTypes.func.isRequired,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  icon: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  inputId: PropTypes.string,\n  moreClass: PropTypes.string,\n  isDropdownBtn: PropTypes.bool,\n  iconStyle: PropTypes.object,\n};\n\nexport default memo(NavBtn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import AsyncModal from '../Modals/AsyncModal.jsx';\nimport AsyncPopup from '../Popup/AsyncPopup.jsx';\nconst CbookSwitcherContainer = React.lazy(() => import(/* webpackPreload: true */ './CbookSwitcherContainer.jsx'));\n\nconst AsyncCbookSwitcherModal = (props) => {\n  // const commonModalProps = {\n  //   // closeTimeoutMS: 200,\n  //   isOpen: props.modalProps.isOpen,\n  //   shouldCloseOnOverlayClick: false,\n  //   onRequestClose: props.modalProps.handleClose,\n  //   handleClose: props.modalProps.handleClose,\n  //   contentLabel: 'aaaaa',\n  //   overlayClassName: 'popup-backdrop',\n  //   className: 'popup cbooks-switcher-ctner',\n  //   bodyOpenClassName: 'popup-open',\n  //   htmlOpenClassName: 'popup-open',\n  // };\n  const commonPopupProps = {\n    isOpen: props.modalProps.isOpen,\n    handleClose: props.modalProps.handleClose,\n  };\n  const switcherProps = { ...props };\n  delete switcherProps.modalProps;\n  return (\n    <AsyncPopup modalProps={{ ...commonPopupProps }} fallbackModalProps={{ ...commonPopupProps }}>\n      <CbookSwitcherContainer {...switcherProps} handleClose={props.modalProps.handleClose} />\n    </AsyncPopup>\n  );\n};\n\nAsyncCbookSwitcherModal.propTypes = {\n  modalProps: PropTypes.shape({\n    isOpen: PropTypes.bool.isRequired,\n    handleClose: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default AsyncCbookSwitcherModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport NavBtn from './NavBtn.jsx';\nimport AsyncCbookSwitcherModal from '../CbookSwitcher/AsyncCbookSwitcherModal.jsx';\nimport AsyncCFormPopup from '../ContactForm/AsyncCFormPopup.jsx';\n\nconst MainNav = (props) => {\n  return (\n    <nav className=\"sticky-nav\">\n      <nav className=\"main-nav\">\n        <NavBtn\n          label={`Contacts Books (${props.totalContactsAmount})`}\n          icon=\"fas fa-address-book\"\n          onClick={props.onClickCbookSwitcher}\n        />\n        <AsyncCbookSwitcherModal\n          modalProps={{\n            isOpen: props.isShowCbookSwitcher,\n            handleClose: props.closeCbookSwitcherModal,\n          }}\n        />\n        <NavBtn\n          moreClass={classNames('trash-btn', {\n            lighter: props.numOfCheckedItems > 0,\n          })}\n          title=\"Long-press this button to delete all contacts\"\n          label={`Delete ${props.numOfCheckedItems > 0 ? 'contact(s)' : 'all contacts'}`}\n          icon=\"fas fa-trash\"\n          btnRef={props.delBtnRef}\n          onMouseDown={props.setTimer}\n          onMouseUp={props.clearTimer}\n          onClick={props.onClickDelete}\n        />\n        {/* <input type=\"checkbox\" id=\"bckp-rstr-toggle\" style={{ display: 'none' }} />\n        <NavBtn\n          isDropdownBtn\n          inputId=\"bckp-rstr-toggle\"\n          label=\"Backup / Restore\"\n          icon=\"fas fa-save\"\n          onClick={props.openBackupRestoreSubNav}\n        />\n        <NavBtn moreClass=\"backup-btn\" label=\"Backup\" icon=\"fas fa-download\" onClick={props.handlerBackupData} />\n        <NavBtn moreClass=\"restore-btn\" label=\"Restore\" icon=\"fas fa-upload\" onClick={props.handlerRestoreData} /> */}\n        <NavBtn\n          moreClass={classNames({\n            'color-blink': props.totalContactsAmount === 0,\n          })}\n          label=\"Add new contact\"\n          icon={classNames('fas fa-plus-circle', {\n            jump: props.totalContactsAmount === 0,\n            'scale-bigger': props.totalContactsAmount === 0,\n          })}\n          onClick={props.onClickAddNewContact}\n        />\n      </nav>\n      <AsyncCFormPopup\n        modalProps={{\n          isOpen: props.isOpenCreateContactForm,\n          handleClose: props.closeCreateContactForm,\n        }}\n        title=\"Add new contact\"\n      />\n    </nav>\n  );\n};\n\nMainNav.propTypes = {\n  setTimer: PropTypes.func.isRequired,\n  clearTimer: PropTypes.func.isRequired,\n  delBtnRef: PropTypes.object.isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n  totalContactsAmount: PropTypes.number.isRequired,\n  numOfCheckedItems: PropTypes.number.isRequired,\n\n  isShowCbookSwitcher: PropTypes.bool.isRequired,\n  onClickCbookSwitcher: PropTypes.func.isRequired,\n  closeCbookSwitcherModal: PropTypes.func.isRequired,\n\n  isOpenCreateContactForm: PropTypes.bool.isRequired,\n  closeCreateContactForm: PropTypes.func.isRequired,\n  onClickAddNewContact: PropTypes.func.isRequired,\n};\n\nexport default MainNav;\n"],"sourceRoot":""}