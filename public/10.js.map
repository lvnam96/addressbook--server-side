{"version":3,"sources":["webpack:///./entrypoints/main/src/js/components/ContactForm/LetterAvatar.jsx","webpack:///./entrypoints/main/src/js/components/ContactCard/ButtonsContainer.js","webpack:///./entrypoints/main/src/js/components/ContactCard/LabelTag.jsx","webpack:///./entrypoints/main/src/js/components/ContactCard/Header.js","webpack:///./entrypoints/main/src/js/components/ContactCard/DetailsRow.js","webpack:///./entrypoints/main/src/js/components/ContactCard/Body.js","webpack:///./entrypoints/main/src/js/components/ContactCard/ContactCard.js"],"names":["LetterAvatar","props","firstLetterElemProps","className","style","backgroundColor","getCSSColorString","color","onClick","title","cursor","classNames","length","firstLetter","defaultProps","memo","ContactCardButtonsContainer","isOpenInPopup","handleClose","onClickEdit","onClickRemove","LabelTag","type","text","ContactCardHeader","hasLabels","contact","labels","name","toUpperCase","map","labelObj","key","value","label","ContactCardDetailsRow","child","iconClass","ContactCardBody","phoneNumb","extractCallingCode","phone","callingCode","numb","_get","DetailsRow","href","rel","birth","displayDate","jobTitle","email","address","website","target","note","relationship","ContactCard","this","PropTypes","bool","instanceOf","adbk","classes","Contact","isRequired","func","React","PureComponent"],"mappings":"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","file":"10.js","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { getCSSColorString } from '../../helpers/utilsHelper';\n\nconst LetterAvatar = (props) => {\n  const firstLetterElemProps = {\n    className: 'letter-avt__first-letter',\n    style: {\n      backgroundColor: getCSSColorString(props.color),\n    },\n  };\n  if (typeof props.onClick === 'function') {\n    firstLetterElemProps.onClick = props.onClick;\n    firstLetterElemProps.title = 'Click to choose your preferred color';\n    firstLetterElemProps.style.cursor = 'pointer';\n  }\n  return (\n    <div\n      className={classNames('letter-avt', {\n        [props.className]: props.className.length > 0,\n      })}>\n      <div {...firstLetterElemProps}>\n        <span>{props.firstLetter}</span>\n      </div>\n    </div>\n  );\n};\n\nLetterAvatar.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired]).isRequired,\n  onClick: PropTypes.func,\n  firstLetter: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nLetterAvatar.defaultProps = {\n  className: '',\n};\n\nexport default memo(LetterAvatar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactCardButtonsContainer = (props) => {\n  return (\n    <div className=\"contact-card__btns-ctnr\">\n      {props.isOpenInPopup && (\n        <div\n          className=\"contact-card__btn contact-card__close-btn\"\n          title=\"Close Contact Details\"\n          onClick={props.handleClose}>\n          <i className=\"contact-card__btn-ico fas fa-chevron-left\" />\n        </div>\n      )}\n      <div className=\"contact-card__btn contact-card__edit-btn\" title=\"Edit this contact\" onClick={props.onClickEdit}>\n        <i className=\"contact-card__btn-ico fas fa-pen\" />\n      </div>\n      <div\n        className=\"contact-card__btn contact-card__remove-btn\"\n        title=\"Delete this contact\"\n        onClick={props.onClickRemove}>\n        <i className=\"contact-card__btn-ico fas fa-user-times\" />\n      </div>\n    </div>\n  );\n};\n\nContactCardButtonsContainer.defaultProps = {\n  isOpenInPopup: true\n};\n\nContactCardButtonsContainer.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  onClickEdit: PropTypes.func.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n  isOpenInPopup: PropTypes.bool,\n};\n\nexport default ContactCardButtonsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LabelTag = (props) => <span className={`contact-card__tag contact-card__tag--${props.type}`}>{props.text}</span>;\n\nLabelTag.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default LabelTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport LabelTag from './LabelTag.jsx';\nimport LetterAvatar from '../ContactForm/LetterAvatar.jsx';\n\nconst ContactCardHeader = (props) => {\n  const hasLabels = props.contact.labels.length > 0;\n  return (\n    <div className=\"contact-card__header\">\n      <div className=\"contact-card__avt-ctnr\">\n        <LetterAvatar color={props.contact.color} firstLetter={props.contact.name[0].toUpperCase()} />\n      </div>\n      <div className=\"contact-card__name-ctnr\">\n        <h2\n          className={classNames('contact-card__name', {\n            'mb-0': !hasLabels,\n          })}\n        >\n          {props.contact.name}\n        </h2>\n        {hasLabels && (\n          <div className=\"contact-card__tags-ctnr\">\n            {props.contact.labels.map((labelObj) => {\n              return <LabelTag key={labelObj.value} type={labelObj.value} text={labelObj.label} />;\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nContactCardHeader.propTypes = {\n  contact: PropTypes.instanceOf(adbk.classes.Contact).isRequired,\n};\n\nexport default ContactCardHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactCardDetailsRow = (props) => (\n  <div className=\"contact-card__details-row\">\n    <div className=\"contact-card__details-row__text\">\n      <p>{props.child}</p>\n    </div>\n    <div className=\"contact-card__details-row__icon\">\n      <i className={props.iconClass} />\n    </div>\n  </div>\n);\n\nContactCardDetailsRow.propTypes = {\n  child: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default ContactCardDetailsRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _get from 'lodash/get';\n\nimport { displayDate } from '../../helpers/timeHelper';\n\nimport DetailsRow from './DetailsRow';\nimport { extractCallingCode } from '../../helpers/phoneHelper';\n\nconst ContactCardBody = (props) => {\n  const countryCode = extractCallingCode(props.contact.phone.callingCode).numb;\n  const phoneNumb = '+' + countryCode + props.contact.phone.phoneNumb;\n  return (\n    <div className=\"contact-card__body\">\n      <p className=\"contact-card__body__title\">Contact Details</p>\n      <div className=\"contact-card__details-container\">\n        {_get(props, 'contact.phone.phoneNumb') && (\n          <DetailsRow\n            child={\n              <a href={'tel:' + phoneNumb} rel=\"nofollow\">\n                {phoneNumb}\n              </a>\n            }\n            iconClass=\"fas fa-phone\"\n          />\n        )}\n        {props.contact.birth && (\n          // should be a way to add birthday to OS calendar (Windows, Android, iOS, MacOSX)\n          <DetailsRow child={displayDate(props.contact.birth)} iconClass=\"fas fa-birthday-cake\" />\n        )}\n        {props.contact.jobTitle && <DetailsRow child={props.contact.jobTitle} iconClass=\"fas fa-id-badge\" />}\n        {props.contact.email && (\n          <DetailsRow\n            child={\n              <a href={'mailto:' + props.contact.email} rel=\"nofollow\">\n                {props.contact.email}\n              </a>\n            }\n            iconClass=\"fas fa-envelope\"\n          />\n        )}\n        {props.contact.address && <DetailsRow child={props.contact.address} iconClass=\"fas fa-map-marker-alt\" />}\n        {props.contact.website && (\n          <DetailsRow\n            child={\n              <a target=\"_blank\" href={props.contact.website} rel=\"nofollow noopener noreferrer\">\n                {props.contact.website}\n              </a>\n            }\n            // child={<a href={props.contact.website} rel=\"nofollow\">{props.contact.website}</a>}// when to use target=\"_blank\" https://css-tricks.com/use-target_blank/\n            iconClass=\"fas fa-globe\"\n          />\n        )}\n        {props.contact.note && <DetailsRow child={props.contact.note} iconClass=\"fas fa-sticky-note\" />}\n        {props.contact.relationship && (\n          <DetailsRow child={props.contact.relationship} iconClass=\"fas fa-user-friends\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nContactCardBody.propTypes = {\n  contact: PropTypes.instanceOf(adbk.classes.Contact).isRequired,\n};\n\nexport default ContactCardBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ButtonsContainer from './ButtonsContainer';\nimport Header from './Header';\nimport Body from './Body';\n\nclass ContactCard extends React.PureComponent {\n  static get propTypes () {\n    return {\n      isOpenInPopup: PropTypes.bool,\n      contact: PropTypes.instanceOf(adbk.classes.Contact).isRequired,\n      handleClose: PropTypes.func.isRequired,\n      onClickEdit: PropTypes.func.isRequired,\n      onClickRemove: PropTypes.func.isRequired,\n    };\n  }\n\n  render () {\n    return (\n      <div className=\"contact-card\">\n        <ButtonsContainer\n          handleClose={this.props.handleClose}\n          onClickEdit={this.props.onClickEdit}\n          onClickRemove={this.props.onClickRemove}\n          isOpenInPopup={this.props.isOpenInPopup}\n        />\n        <Header contact={this.props.contact} />\n        <Body contact={this.props.contact} />\n      </div>\n    );\n  }\n}\n\nexport default ContactCard;\n"],"sourceRoot":""}